---
directive:
  - from: swagger-document
    where: $.definitions.*
    transform: |
      $["x-accessibility"] = "public"
  - from: swagger-document
    where: $..*[?(@.additionalProperties===false)]
    transform: delete $.additionalProperties
  - from: swagger-document
    where: $.definitions.*.additionalProperties
    transform: |
      return typeof $ === "boolean"
        ? ($ ? { type: "object" } : undefined)
        : $
    reason: polyfill
  - from: openapi-document
    where: $.components.*.additionalProperties
    transform: |
      return typeof $ === "boolean"
        ? ($ ? { type: "object"} : undefined)
        : $
    reason: polyfill
input-file:
  - file:///D:/Martin/autorest-customization/swagger.yaml
exclude-file: []
profile: []
output-artifact:
  - configuration.yaml
  - preserved-files
  - binary-file
require:
  - >-
    file:///C:/Users/trojan/.autorest/@autorest_core@3.1.3/node_modules/@autorest/core/resources/inspect.md
  - >-
    file:///C:/Users/trojan/.autorest/@autorest_core@3.1.3/node_modules/@autorest/core/resources/directives.md
  - >-
    file:///C:/Users/trojan/.autorest/@autorest_core@3.1.3/node_modules/@autorest/core/resources/pipeline.md
  - >-
    file:///C:/Users/trojan/.autorest/@autorest_core@3.1.3/node_modules/@autorest/core/resources/loader-openapi.md
  - >-
    file:///C:/Users/trojan/.autorest/@autorest_core@3.1.3/node_modules/@autorest/core/resources/miscellaneous.md
  - >-
    file:///C:/Users/trojan/.autorest/@autorest_core@3.1.3/node_modules/@autorest/core/resources/patches.md
  - >-
    file:///C:/Users/trojan/.autorest/@autorest_core@3.1.3/node_modules/@autorest/core/resources/plugin-powershell.md
  - >-
    file:///C:/Users/trojan/.autorest/@autorest_core@3.1.3/node_modules/@autorest/core/resources/plugin-azureresourceschema.md
  - >-
    file:///C:/Users/trojan/.autorest/@autorest_core@3.1.3/node_modules/@autorest/core/resources/plugin-csharp.md
  - >-
    file:///C:/Users/trojan/.autorest/@autorest_core@3.1.3/node_modules/@autorest/core/resources/plugin-go.md
  - >-
    file:///C:/Users/trojan/.autorest/@autorest_core@3.1.3/node_modules/@autorest/core/resources/plugin-java.md
  - >-
    file:///C:/Users/trojan/.autorest/@autorest_core@3.1.3/node_modules/@autorest/core/resources/plugin-nodejs.md
  - >-
    file:///C:/Users/trojan/.autorest/@autorest_core@3.1.3/node_modules/@autorest/core/resources/plugin-php.md
  - >-
    file:///C:/Users/trojan/.autorest/@autorest_core@3.1.3/node_modules/@autorest/core/resources/plugin-python.md
  - >-
    file:///C:/Users/trojan/.autorest/@autorest_core@3.1.3/node_modules/@autorest/core/resources/plugin-ruby.md
  - >-
    file:///C:/Users/trojan/.autorest/@autorest_core@3.1.3/node_modules/@autorest/core/resources/plugin-typescript.md
  - >-
    file:///C:/Users/trojan/.autorest/@autorest_core@3.1.3/node_modules/@autorest/core/resources/plugin-validators.md
  - >-
    file:///C:/Users/trojan/.autorest/@autorest_core@3.1.3/node_modules/@autorest/core/resources/plugin-az.md
  - >-
    file:///C:/Users/trojan/.autorest/@autorest_core@3.1.3/node_modules/@autorest/core/resources/plugin-terraform.md
  - >-
    file:///C:/Users/trojan/.autorest/@autorest_core@3.1.3/node_modules/@autorest/core/resources/plugin-azure-functions.md
  - >-
    file:///C:/Users/trojan/.autorest/@autorest_core@3.1.3/node_modules/@autorest/core/resources/graphs.md
  - >-
    file:///C:/Users/trojan/.autorest/@autorest_core@3.1.3/node_modules/@autorest/core/resources/help-configuration.md
try-require:
  - ./readme.csharp.md
use: []
pass-thru:
  - api-version-parameter-handler
  - model-deduplicator
  - subset-reducer
pipeline-model: v3
use-extension:
  '@autorest/csharp': latest
  '@autorest/modelerfour': 4.19.3
csharp: true
public-clients: true
output-folder: ./Generated
namespace: Core
__parents:
  ./readme.csharp.md: >-
    file:///C:/Users/trojan/.autorest/@autorest_core@3.1.3/node_modules/@autorest/core/resources/
header-definitions:
  warning: >-
    Changes may cause incorrect behavior and will be lost if the code is
    regenerated.
  default: >-
    Code generated by Microsoft (R) AutoRest Code Generator (autorest: {core},
    generator: {generator})
  no-version: Code generated by Microsoft (R) AutoRest Code Generator.
  apache: |
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
      http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
  mit: >-
    Licensed under the MIT License. See License.txt in the project root for
    license information.
  mit-small: Licensed under the MIT License.
  microsoft: Copyright (c) Microsoft Corporation. All rights reserved.
perform-load: true
track2: true
azure-arm: false
openapi-type: arm
declare-directive:
  remove-operation: |-
    [{
      from: 'openapi-document',
      "where-operation": $,
      transform: '$ = undefined'
    }, {
      from: 'swagger-document',
      "where-operation": $,
      transform: '$ = undefined'
    } ]
  rename-operation: |-
    [{
      from: 'swagger-document',
      "where-operation": $.from,
      transform: `$.operationId = ${JSON.stringify($.to)}`
    },{
      from: 'openapi-document',
      "where-operation": $.from,
      transform: `$.operationId = ${JSON.stringify($.to)}`
    }]
  remove-model: |-
    [{
      from: 'swagger-document',
      "where-model": $,
      transform: 'return undefined'
    },{
      from: 'openapi-document',
      "where-model": $,
      transform: 'return undefined'
    }]
  rename-model: |-
    [{
      from: 'swagger-document',
      where: '$.definitions',
      transform: `if ($[${JSON.stringify($.from)}]) { $[${JSON.stringify($.to)}] = $[${JSON.stringify($.from)}]; delete $[${JSON.stringify($.from)}]; }`
    }, {
      from: 'swagger-document',
      where: `$..['$ref']`,
      transform: `$ = $ === "#/definitions/${$.from}" ? "#/definitions/${$.to}" : $`
    },  {
      from: 'swagger-document',
      where: `$..['$ref']`,
      transform: `$ = $ === ($documentPath + "#/definitions/${$.from}") ? ($documentPath + "#/definitions/${$.to}") : $`
    }]
  remove-property: |-
    [{
      from: 'swagger-document',
      transform: `delete $.properties[${JSON.stringify($)}]`
    }, {
      from: 'openapi-document',
      transform: `delete $.properties[${JSON.stringify($)}]`
    }]
  rename-property: |-
    [{
      from: 'swagger-document',
      transform: `if ($.properties[${JSON.stringify($.from)}]) { $.properties[${JSON.stringify($.to)}] = $.properties[${JSON.stringify($.from)}]; delete $.properties[${JSON.stringify($.from)}]; }`
    }, {
      from: 'openapi-document',
      transform: `if ($.properties[${JSON.stringify($.from)}]) { $.properties[${JSON.stringify($.to)}] = $.properties[${JSON.stringify($.from)}]; delete $.properties[${JSON.stringify($.from)}]; }`
    }]
  where-operation: |-
    (() => {
      switch ($context.from) {
        case "code-model-v1":
          return { from: "code-model-v1", where: `$.operations[*].methods[?(@.serializedName == ${JSON.stringify($)})]` };
        
        case "openapi-document":
          return { from: "openapi-document", where: `$..paths.*[?(@.operationId == ${JSON.stringify($)})]` };
          
        case "swagger-document":
        default:
          return { from: "swagger-document", where: `$.paths.*[?(@.operationId == ${JSON.stringify($)})]` };
      }
    })()
  where-model: |-
    (() => {
      switch ($context.from) {
        case "code-model-v1":
          throw "not implemented";

        case "code-model-v3":
          return {from: "code-model-v3", where: `$.schemas[?(/${$}/i.exec(@.details.default.name))]`};

        case "openapi-document":
          return { from: "openapi-document", where: `$.schemas[${JSON.stringify($)}]` };

        case "swagger-document":
        default:
          return { from: "swagger-document", where: `$.definitions[${JSON.stringify($)}]` };
      }
    })()
  set: '{ transform: `return ${JSON.stringify($)}` }'
pipeline:
  openapi-document/transform:
    input:
      - openapi-document/openapi-document-converter
      - openapi-document/individual/identity
    suffixes:
      - ''
  openapi-document/allof-cleaner:
    input: openapi-document/transform
    suffixes:
      - ''
  openapi-document/tree-shaker:
    input: openapi-document/allof-cleaner
    suffixes:
      - ''
  openapi-document/enum-deduplicator:
    input: model-deduplicator
    suffixes:
      - ''
  openapi-document/subset-reducer:
    input: enum-deduplicator
    suffixes:
      - ''
  openapi-document/quick-check:
    input: subset-reducer
    suffixes:
      - ''
  openapi-document/multi-api/reset-identity:
    input: subset-reducer
    to: openapi-document
    name: openapi-document.json
    suffixes:
      - ''
  openapi-document/multi-api/identity:
    input: reset-identity
    suffixes:
      - ''
  openapi-document/multi-api/emitter:
    input: openapi-document/multi-api/identity
    input-artifact: openapi-document
    is-object: true
    suffixes:
      - ''
  openapi-document/multi-api-merger:
    input: tree-shaker
    suffixes:
      - ''
  openapi-document/components-cleaner:
    input: multi-api-merger
    suffixes:
      - ''
  openapi-document/component-modifiers:
    input: components-cleaner
    suffixes:
      - ''
  openapi-document/api-version-parameter-handler:
    input: component-modifiers
    suffixes:
      - ''
  openapi-document/profile-filter:
    input: api-version-parameter-handler
    suffixes:
      - ''
  openapi-document/model-deduplicator:
    input: profile-filter
    suffixes:
      - ''
  openapi-document/emitter:
    input: profile-filter
    input-artifact: profile-filter-log
    suffixes:
      - ''
  swagger-document/loader-swagger:
    output-artifact: swagger-document
    scope: perform-load
    suffixes:
      - ''
  swagger-document/individual/transform:
    input: loader-swagger
    output-artifact: swagger-document
    suffixes:
      - ''
  swagger-document/individual/schema-validator-swagger:
    input: individual/transform
    output-artifact: swagger-document
    suffixes:
      - ''
  swagger-document/individual/identity:
    input: individual/schema-validator-swagger
    output-artifact: swagger-document
    suffixes:
      - ''
  swagger-document/identity:
    input: individual/schema-validator-swagger
    output-artifact: swagger-document
    suffixes:
      - ''
  openapi-document/openapi-document-converter:
    input: swagger-document/identity
    suffixes:
      - ''
  openapi-document/loader-openapi:
    scope: perform-load
    suffixes:
      - ''
  openapi-document/individual/transform:
    input: loader-openapi
    suffixes:
      - ''
  openapi-document/individual/schema-validator-openapi:
    input: individual/transform
    suffixes:
      - ''
  openapi-document/individual/identity:
    input: individual/schema-validator-openapi
    suffixes:
      - ''
  swagger-document/model-validator:
    input: swagger-document/identity
    scope: model-validator
    suffixes: []
  swagger-document/semantic-validator:
    input: swagger-document/identity
    scope: semantic-validator
    suffixes: []
  configuration-emitter:
    scope: scope-configuration-emitter
    suffixes:
      - ''
  pipeline-emitter:
    scope: scope-pipeline-emitter
    suffixes:
      - ''
  csharpproj:
    input: modelerfour/identity
    suffixes:
      - ''
  csharpproj/emitter:
    input: csharpproj
    scope: output-scope
    suffixes:
      - ''
  csharpgen:
    input: modelerfour/identity
    suffixes:
      - ''
  csharpgen/emitter:
    input: csharpgen
    scope: output-scope
    suffixes:
      - ''
  prechecker:
    input: openapi-document/multi-api/identity
    suffixes:
      - ''
  modelerfour:
    input:
      - prechecker
    suffixes:
      - ''
  modelerfour/new-transform:
    input: modelerfour
    suffixes:
      - ''
  modelerfour/flattener:
    input: modelerfour/new-transform
    suffixes:
      - ''
  modelerfour/flattener/new-transform:
    input: modelerfour/flattener
    suffixes:
      - ''
  modelerfour/grouper:
    input: modelerfour/flattener/new-transform
    suffixes:
      - ''
  modelerfour/grouper/new-transform:
    input: modelerfour/grouper
    suffixes:
      - ''
  modelerfour/pre-namer:
    input: modelerfour/grouper/new-transform
    suffixes:
      - ''
  modelerfour/pre-namer/new-transform:
    input: modelerfour/pre-namer
    suffixes:
      - ''
  modelerfour/checker:
    input:
      - modelerfour/pre-namer/new-transform
      - prechecker
    suffixes:
      - ''
  modelerfour/identity:
    input: modelerfour/checker
    suffixes:
      - ''
  modelerfour/emitter:
    input: modelerfour/identity
    scope: scope-modelerfour/emitter
    suffixes:
      - ''
  modelerfour/notags/emitter:
    input: modelerfour/identity
    scope: scope-modelerfour/notags/emitter
    suffixes:
      - ''
scope-cm/emitter:
  input-artifact: code-model-v1
  is-object: true
  output-uri-expr: |
    "code-model-v1"
scope-openapi-document/emitter:
  input-artifact: openapi-document
  is-object: true
  output-uri-expr: >
    $config["output-file"] ||

    ($config.namespace ? $config.namespace.replace(/:/g,'_') : undefined) ||

    $config["input-file"][0].split('/').reverse()[0].split('\\').reverse()[0].replace(/\.json$/,
    "")
scope-swagger-document/emitter:
  input-artifact: swagger-document
  is-object: true
  output-uri-expr: >
    $config["output-file"] || 

    ($config.namespace ? $config.namespace.replace(/:/g,'_') : undefined) || 

    $config["input-file"][0].split('/').reverse()[0].split('\\').reverse()[0].replace(/\.json$/,
    "")    
scope-reflect-api-versions-cs-emitter:
  input-artifact: source-file-csharp
  output-uri-expr: $key
version: ~3.1.0
scope-configuration-emitter:
  input-artifact: configuration
  is-object: true
  output-uri-expr: |
    "configuration"
scope-pipeline-emitter:
  input-artifact: pipeline
  is-object: true
  output-uri-expr: |
    "pipeline"
used-extension:
  - '["@autorest/csharp","latest"]'
  - '["@autorest/modelerfour","4.19.3"]'
help-content:
  csharp:
    activationScope: csharp
    categoryFriendlyName: C# Generator
    settings:
      - key: library-name
        description: The name of your library. This is what will be displayed on NuGet.
        type: string
      - key: shared-source-folders
        description: >-
          Pass shared folder paths through here. Common values point to the
          shared generator assets and shared azure core assets in
          autorest.csharp
        type: string
      - key: public-clients
        description: Whether to generate public client. Defaults to `false`.
        type: bool
      - key: model-namespace
        description: >-
          Whether to add a separate namespace of Models, more specifically
          adding `{value-from-namespace-flag}.Models`. Defaults to `true`.
        type: bool
modelerfour:
  always-create-content-type-parameter: true
  flatten-models: true
  flatten-payloads: true
  group-parameters: true
  naming:
    override:
      cmyk: CMYK
      $host: $host
  always-create-accept-parameter: true
output-scope:
  output-artifact: source-file-csharp
shared-source-folders: >-
  file:///C:/Users/trojan/.autorest/@autorest_csharp@3.0.0-beta.20210629.5/node_modules/@autorest/csharp/Generator.Shared;file:///C:/Users/trojan/.autorest/@autorest_csharp@3.0.0-beta.20210629.5/node_modules/@autorest/csharp/Azure.Core.Shared
scope-modelerfour/emitter:
  input-artifact: code-model-v4
  is-object: true
  output-uri-expr: |
    "code-model-v4.yaml"
scope-modelerfour/notags/emitter:
  input-artifact: code-model-v4-no-tags
  is-object: true
  output-uri-expr: |
    "code-model-v4-no-tags.yaml"
deduplicate-inline-models: true
modelerfour-loaded: true
base-folder: .
debug: false
verbose: false
disable-validation: false
__status: {}
