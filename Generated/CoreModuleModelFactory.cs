// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Core.Models;

namespace Core
{
    /// <summary> Model factory for read-only models. </summary>
    public static partial class CoreModuleModelFactory
    {
        /// <summary> Initializes a new instance of MessageBase. </summary>
        /// <param name="merchantId"> Merchant id. </param>
        /// <param name="targets"> . </param>
        /// <param name="authToken"> Token used in request, which generates the event. </param>
        /// <param name="published"> Date time when the event was published. </param>
        /// <param name="messageId"> Message id for better identification. </param>
        /// <returns> A new <see cref="Models.MessageBase"/> instance for mocking. </returns>
        public static MessageBase MessageBase(int? merchantId = null, MessageTargets targets = null, string authToken = null, DateTimeOffset? published = null, string messageId = null)
        {
            return new MessageBase(merchantId, targets, authToken, published, messageId);
        }

        /// <summary> Initializes a new instance of MessageTargets. </summary>
        /// <param name="locations"> List of message target locations. </param>
        /// <returns> A new <see cref="Models.MessageTargets"/> instance for mocking. </returns>
        public static MessageTargets MessageTargets(IEnumerable<int> locations = null)
        {
            locations ??= new List<int>();

            return new MessageTargets(locations?.ToList());
        }
    }
}
